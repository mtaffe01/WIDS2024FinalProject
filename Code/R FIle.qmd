---
title: "WIDS 2024 Final Project"
author: "Michael Taffe, Melanie Klein, Ramiro Arevalo"
format: html
editor: visual
---

# 1. Comparing interactions between collective bargaining rates, wages, and House of Representative elections

**Insert abstract of project, where we got our data, what our data looks like, and other information here**

# 2. Data Analysis

## 2.1 Getting Set Up

```{r}
suppressPackageStartupMessages(library(tidyverse))
library(usmap) # Used for map plots
```

```{r}
# Union Data: obtained from Tidy Tuesday
union_wages <- read_rds("../Data/union_wages.rds")
union_states <- read_rds("../Data/union_states.rds")

# Election Data: Obtained from Tidy Tuesday
house <- read_rds("../Data/house.rds")

# Wage Data: Obtained from Tidy Tuesday
income_distribution <- read_rds("../Data/income_distribution.rds")

# Minimum Wage Data: Obtained from U.S. Department of Labor
minimum_wage <- read_csv("../Data/minimum_wage_data.csv",show_col_types = FALSE)
```

## 2.2 Basic Data Cleaning

### 2.2.1 Examining data shape

Before we do anything to our data, we will examine our data to ensure everything loaded in correctly

```{r}
head(union_wages)
head(union_states)
head(house)
head(income_distribution)
head(minimum_wage)
```

From the head() function we can already see some tidying that needs to be done, mostly in the `house` table. First, to make data analysis easier we will need to combine the `states` and `house` table; this will be done on the year and state columns. however, the state column in the house data set is in uppercase, compared to sentence case in the states table. Next, R has read district in as a string column rather than a numeric column. Examining the data set documentation, this is because 0 is actually "district at large" rather than a district number. This will be taken into account in data analysis.

Next we will look at a quick summary of the data to find very obvious trends.

From the summary, we can see the demographics has most of its variables skewed. This will be examined in closer detail in the exploratory data analysis. only two columns have NA values and each of those columns NA values represent less than 10% of the data. There is not an immediate cause to take action on these NA values, although they will be examined in greater detail in the EDA.

```{r}
# look for NAs and skews
summary(union_wages)
```

The `wages` table has no NA values. There is also nothing in the data documentation that would indicate a numeric value of some kind is being used as an NA value.

```{r}
summary(union_states)
```

Again, there are no NA values in the States data set, although we do see some significantly skewed data.

```{r}
summary(house)
```

In the house data set, we can see a significant amount of NA values in the runoff column

```{r}
summary(income_distribution)
```
In this table, we can see that there are a few NA values in the tables, and some of the variables have a noticable skew. After some basic data cleaning is done we will see if these values remain

```{r}
summary(minimum_wage)
```
Only one column has NA values in this data frame, and in that column only 15 out of 2862 observations are missing values. Again, we will see if these values remain after our data cleaning

### 2.2.2 Cleaning data script

From a quick look at the shapes and distribution of the tables, the house table will be modified.

```{r}
house <- house |>
  group_by(year, state, district) |> # group for next line
  filter(candidatevotes == max(candidatevotes)) |> #only include candidates that won
  ungroup() |> 
  mutate(state = str_to_sentence(state)) |> # change from all caps to sentence case) 
  select(!(state_fips:office)) |> #Remove unwanted columns
  select(!(stage:candidate)) |> 
  select(!(writein:fusion_ticket)) |> 
  rename(state_abbreviation = state_po) |>  # rename state abbreviation column
  mutate(party = case_when( # Recode of party variable
    str_detect(party, "DEMOCRAT") ~ "DEMOCRAT",
    str_detect(party, "REPUBLICAN") ~ "REUBLICAN",
    str_detect(party, "INDEPENDENT") ~ "INDEPENDENT"
  )) |> 
  filter(state_abbreviation != "DC") # Removes the single line of DC data
```


```{r}
union_wages <- union_wages |> 
  filter(facet == "all wage and salary workers") |> 
  distinct(year, .keep_all = TRUE) |> 
  select(-sample_size,
         -at_cap) |> 
  mutate(wage_percent_difference = union_wage_premium_raw, .keep = "unused") |> 
  mutate(wage_percent_difference_adjusted = union_wage_premium_adjusted, .keep = "unused") |> 
  mutate(union_type = facet, .keep = "unused")
```

```{r}
union_states <- union_states |> 
  select(-state_census_code,
         -observations) |> # remove unwanted columns
  mutate(employment_count = employment * 1000, .keep = "unused") |> # column measured in 1000s, this fixes it
  mutate(union_employment_count = members * 1000, .keep = "unused") |> 
  mutate(collective_bargain_employment_count = covered * 1000,
         .keep = "unused") |> 
  rename(
    percent_union = p_members,
    percent_collective_bargain = p_covered
  ) #renamed columns
```

```{r}
income_distribution <- income_distribution |> 
  select(-number) |> # removing unwanted columns
  select(!ends_with("moe")) |> 
  select(year:income_mean) |> 
  distinct(year, race, income_median, income_mean, .keep_all = TRUE) |> # only include one line per year. needed bc of multiple sectors that are not being used in data analysis
  rename(median_income = income_median,
         mean_income = income_mean) |> # renaming columns
  filter(race == "All Races") |> 
  select(-race)
```

```{r}
minimum_wage <- minimum_wage |> 
  select(Year:CPI.Average) |> # selecting relevant columns
  rename(year = Year,
         state = State,
         state_min_wage = State.Minimum.Wage,
         state_min_wage_2020_adj = State.Minimum.Wage.2020.Dollars,
         fed_min_wage = Federal.Minimum.Wage,
         fed_min_wage_2020_adj = Federal.Minimum.Wage.2020.Dollars,
         effective_min_wage = Effective.Minimum.Wage,
         effective_min_wage_2020_adj = Effective.Minimum.Wage.2020.Dollars,
         CPI_avg = CPI.Average
  ) |> # renaming variables
  filter(!state %in% c("U.S. Virgin Islands", "Puerto Rico", "Guam")) |>  # remove territory
  mutate(state_abbreviation = 
           ifelse(is.na(state.abb[match(state, state.name)]),
                  "DC",
                  state.abb[match(state, state.name)]),
         .keep = "unused", .after = year) # replaces state with state abbreviation, NA values coded as DC as DC is the only NA value 
```

```{r}
# seeing what we have left
head(union_wages)
head(union_states)
head(house)
head(income_distribution)
head(minimum_wage)
```
```{r}
colSums(is.na(house))
colSums(is.na(income_distribution))
colSums(is.na(minimum_wage))
colSums(is.na(union_wages))
colSums(is.na(union_states))
```
There are no more NA values


```{r}
# seeing what years we have
range(union_wages$year) #ntl
range(union_states$year) # state
range(house$year) # state
range(income_distribution$year) # ntl
range(minimum_wage$year) # state
```

### 2.2.3 Merging dataframes

The states data set has five entries for each year for each of the five `sectors`. For this project we will use the `total` sector. A decades column will also be added. Finally, we will filter all of the data to only include data between 1984 and 2019 as these are the common data years between all of the tables

#### 2.2.3.1 State Dataframes

```{r}
full_state_data <- union_states |> 
  filter(sector == "Total") |> 
  select(-sector,
         -state) |> 
  left_join(house, by = c("year", "state_abbreviation")) |> 
  mutate(decade = paste0((year - year %% 10), "s"),
         party_binary = ifelse(party == "DEMOCRAT", 1, 0)) |> 
  left_join(minimum_wage, by = c("year", "state_abbreviation")) |> 
  group_by(year, state) |> 
  mutate(party_state_average = mean(party_binary)) |>
  ungroup() |> 
  mutate(state = state.name[match(state_abbreviation, state.abb)], # fix state encoding
         regions = state.region[match(state_abbreviation, state.abb)]) |>  # fix region encoding
  filter(year >= 1984 & year <= 2019) |> 
  filter(state_abbreviation != "DC") # Removes the single line of DC data
```

```{r}
state_column_list = c("year", "decade", "state", "state_abbreviation",
                      "regions", "district", "party", "party_binary",
                      "party_state_average",
                      "employment_count", "union_employment_count",
                      "collective_bargain_employment_count", "percent_union",
                      "percent_collective_bargain", "state_min_wage",
                      "state_min_wage_2020_adj", "fed_min_wage",
                      "fed_min_wage_2020_adj", "effective_min_wage",
                      "effective_min_wage_2020_adj", "CPI_avg")
full_state_data <- full_state_data[, state_column_list] # reorder columns
full_state_data$party[is.na(full_state_data$party)] <- "No election" # replace party NAs
full_state_data$district[is.na(full_state_data$district)] <- "No election" # replace district NAs
full_state_data$party_binary[is.na(full_state_data$party_binary)] <- "No election" # replace district NAs
```

```{r}
head(full_state_data)
summary(full_state_data)
```
After combining the dataset, we can see that not all of the variables are tracked every year, causing there to be NA values. We will keep this in mind as we continue our data analysis.


#### 2.2.3.2 National Dataframes

```{r}
state_to_ntl_adjusted <- full_state_data |>
  mutate(prop_2020_adj = fed_min_wage_2020_adj / fed_min_wage, .after = year) |>
  distinct(year, .keep_all = TRUE) |>
  select(year, prop_2020_adj)
```

```{r}
state_to_ntl_employment <- full_state_data |>
  group_by(year) |>
  summarise_at(vars(employment_count:collective_bargain_employment_count), sum)
```

```{r}
full_ntl_data <- income_distribution |> 
  left_join(union_wages, by = "year") |>
  left_join(state_to_ntl_adjusted, by = "year") |>
  left_join(state_to_ntl_employment, by = "year") |>
  mutate(decade = paste0((year - year %% 10), "s"), .after = year) |>
  mutate(mean_median_income_difference = mean_income - median_income, .after = mean_income) |>
   mutate(median_income_2020_adj = median_income * prop_2020_adj,
         mean_income_2020_adj = mean_income * prop_2020_adj,
         mean_median_income_difference_2020_adj = mean_median_income_difference * prop_2020_adj,
         wage_2020_adj = wage * prop_2020_adj,
         union_wage_2020_adj = union_wage * prop_2020_adj,
         nonunion_wage_2020_adj = nonunion_wage * prop_2020_adj,
         percent_union = union_employment_count / employment_count,
         percent_collective_bargain = collective_bargain_employment_count / employment_count) |> 
  select(-prop_2020_adj) |> 
  filter(year >= 1984 & year <= 2019)
```

```{r}
ntl_column_list <- c("year", "decade", "mean_income",
                     "mean_income_2020_adj", "median_income",
                     "median_income_2020_adj", "mean_median_income_difference",
                     "mean_median_income_difference_2020_adj", "wage",
                     "wage_2020_adj", "union_wage", "union_wage_2020_adj",
                     "nonunion_wage", "nonunion_wage_2020_adj",
                     "wage_percent_difference", 
                     "wage_percent_difference_adjusted",
                     "employment_count", "union_employment_count", 
                     "collective_bargain_employment_count",
                     "percent_union", "percent_collective_bargain",
                     "union_type")
full_ntl_data <- full_ntl_data[, ntl_column_list] # reorder columns
```

```{r}
rm(house, income_distribution, minimum_wage, state_to_ntl_adjusted,
   state_to_ntl_employment, union_states, union_wages, state_column_list,
   ntl_column_list)
```

```{r}
head(full_ntl_data)
summary(full_ntl_data)
```
There are no NA values in our national data set.

## 2.3 EDA

For our exploratory data analysis, we will look at interactions between collective bargaining rates, wages, and house election. We will also examine basic distribution.

### 2.3.1 Collective Bargaining

```{r}
per_union_wage_data <- full_state_data |> # This object will be used to create the graph and also in the data subset
  mutate(
    map_color = case_when(
      state_abbreviation == "CA" ~ "CA", # States we would like to highlight. first "" is the state abb, second "" is what will appear in legend
      state_abbreviation == "AK" ~ "AK",
      state_abbreviation == "OK" ~ "OK",
      state_abbreviation == "FL" ~ "FL",
      state_abbreviation == "HI" ~ "HI",
      .default = NA
    )
  ) 
per_union_wage_data |> # use created table here
  ggplot(aes(x = year)) +
  geom_line(aes(y = percent_union, group = state_abbreviation),
            color = "grey75", alpha =0.6) + # using group means the groupings wont appear in legend
  geom_line(data = subset(per_union_wage_data, # use created object here
                          !is.na(map_color)), #subset used to keep out non highlighted states
            aes(y = percent_union, color = map_color),
            linewidth = .75) +
  geom_line(data = subset(full_ntl_data, year >= 1984),
            aes(y = percent_union), color = "orange", linewidth = 1.5) +
  annotate("text", x=1988, y=.15, label= "Federal Avg", color = "orange", size = 5) +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(per_union_wage_data$year), max(per_union_wage_data$year), by = 4)) + 
  labs(title = "States by % of Labor Market Covered by Union",
       x = "Year",
       y = "% of Labor Market In Union",
       color = "Selected States")

rm(per_union_wage_data)
```

Our first graph shows what is commonly known about unions in the United States: Union membership has been on the decline since at least the 1980s. Unfortunately our data does not extend to the last four years where some reports indicate union membership is on the rise. Early on, we can see that southern and more Republican leaning states have lower union rates than more Democrat and northern / western states. There is a very small bump in membership in 2008, which we hypothesize happened in relation to the 2008 financial crisis.

```{r}
per_collective_wage_data <- full_state_data |> # This object will be used to create the graph and also in the data subset
  mutate(
    map_color = case_when(
      state_abbreviation == "CA" ~ "CA", # States we would like to highlight. first "" is the state abb, second "" is what will appear in legend
      state_abbreviation == "AK" ~ "AK",
      state_abbreviation == "HI" ~ "HI",
      state_abbreviation == "FL" ~ "FL",
      .default = NA
    )
  ) 
per_collective_wage_data |> # use created table here
  ggplot(aes(x = year)) +
  geom_line(aes(y = percent_collective_bargain, group = state_abbreviation),
            color = "grey75", alpha =0.6) + # using group means the groupings wont appear in legend
  geom_line(data = subset(per_collective_wage_data, # use created object here
                          !is.na(map_color)), #subset used to keep out non highlighted states
            aes(y = percent_collective_bargain, color = map_color),
            linewidth = .75) +
  geom_line(data = subset(full_ntl_data, year >= 1984),
            aes(y = percent_collective_bargain), color = "orange", linewidth = 1.5) +
  annotate("text", x=1988, y=.17, label= "Federal Avg", color = "orange", size = 5) +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(per_collective_wage_data$year), max(per_collective_wage_data$year), by = 4)) + 
  labs(title = "States by % of Labor Market Covered by a Collective Bargaining Agreement",
       x = "Year",
       y = "% of Labor Market in a Collective Bargaining Agreement",
       color = "Selected States")

rm(per_collective_wage_data)
```

This graph is almost the same as the previous plot, although the rates are slightly higher because this graph includes all collective bargaining agreements.

### 2.3.2 Wages

```{r}
full_ntl_data |> 
  filter(year >= 1984) |> 
  ggplot(aes(x = year)) +
  geom_line(aes(y = mean_income), color = "red") +
  annotate("text", x=1995, y=85000, label= "Mean income", color = "red", size = 5) +
  geom_line(aes(y = median_income), color = "blue") +
  annotate("text", x=1995, y=65000, label= "Median income", color = "blue", size = 5) +
  scale_x_continuous(breaks = seq(min(full_ntl_data$year), max(full_ntl_data$year), by = 4)) + 
  theme_minimal() +
  labs(
    title = "Mean and Median Income in the United States Between 1984 and 2019",
    x = "Year",
    y = "Income in USD (Adjusted to 2020 values)"
  )
```

```{r}
full_ntl_data |> 
  filter(year >= 1984) |> 
  ggplot(aes(x = year)) +
  geom_line(aes(y = mean_income_2020_adj), color = "red") +
  annotate("text", x=1995, y=145000, label= "Mean income", color = "red", size = 5) +
  geom_line(aes(y = median_income_2020_adj), color = "blue") +
  annotate("text", x=1995, y=115000, label= "Median income", color = "blue", size = 5) +
  scale_x_continuous(breaks = seq(min(full_ntl_data$year), max(full_ntl_data$year), by = 4)) + 
  theme_minimal() +
  labs(
    title = "Mean and Median Income in the United States Between 1984 and 2019",
    x = "Year",
    y = "Income in USD (Adjusted to 2020 values)"
  )
```


The two above graphs show that when accounting for inflation, Americans are earning less per year now than they did 40 years ago. As we will see later on when examining wage data at a national level, there are numerous external reasons for this. Most notably, an aging population that is no longer working is likely driving the average down. It is possible that the average worker is earning more but we do not have the data to verify this. 

```{r}
state_minimum_wage_data <- full_state_data |> # This object will be used to create the graph and also in the data subset
  mutate(
    map_color = case_when(
      state_abbreviation == "CA" ~ "CA", # States we would like to highlight. first "" is the state abb, second "" is what will appear in legend
      state_abbreviation == "AK" ~ "AK",
      state_abbreviation == "OK" ~ "OK",
      state_abbreviation == "FL" ~ "FL",
      .default = NA
    )
  ) 
state_minimum_wage_data |> # use created table here
  ggplot(aes(x = year)) +
  geom_line(aes(y = state_min_wage_2020_adj, group = state_abbreviation),
            color = "grey75", alpha =0.6) + # using group means the groupings wont appear in legend
  geom_line(data = subset(state_minimum_wage_data, # use created object here
                          !is.na(map_color)), #subset used to keep out non highlighted states
            aes(y = state_min_wage_2020_adj, color = map_color),
            linewidth = .75) +
  geom_line(aes(y = fed_min_wage_2020_adj), color = "orange", linewidth = 1.5) + # federal minimum wage
  annotate("text", x=1990, y=6, label= "Federal Avg", color = "orange", size = 5) +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(state_minimum_wage_data$year), max(state_minimum_wage_data$year), by = 4)) + 
  labs(title = "State Minimum Wage by Year (Adjusted for 2020 $)",
       subtitle = "For states with an adjusted effective minimum wage above the federal level",
       x = "Year",
       y = "Minimum Wage (Adjusted to 2020 values)",
       color = "Selected States")

rm(state_minimum_wage_data) # remove object to make graph
```

This graph can be used to draw a number of interesting inferences. First, there is a decently dark line at the bottom that indicates a number of states still have no minimum wage. This will be examined in greater detailed in the next graph. Next, we can see that there is a significant shift post 2014 of raising the minimum wage at the state level. Before that time almost no state had a adjusted minimum wage over $10. Now, there are numerous states that surpass this value. Final, we can see that the federal minimum wage has been slowly losing value due to inflation since it was last raised in 2009.

```{r}
effective_minimum_wage_data <- full_state_data |> 
  filter(effective_min_wage_2020_adj != fed_min_wage_2020_adj) |> 
  mutate(
    map_color = case_when(
      state_abbreviation == "CA" ~ "CA",
      state_abbreviation == "AK" ~ "AK",
      state_abbreviation == "CT" ~ "CT",
      state_abbreviation == "HI" ~ "HI",
      .default = NA
    )
  ) 
effective_minimum_wage_data |> 
  ggplot(aes(x = year)) +
  geom_line(aes(y = effective_min_wage_2020_adj, group = state_abbreviation),
            color = "grey75", alpha =0.6) +
  geom_line(data = subset(effective_minimum_wage_data, !is.na(map_color)),
            aes(y = effective_min_wage_2020_adj, color = map_color),
            linewidth = .75) +
  geom_line(aes(y = fed_min_wage_2020_adj), color = "orange", linewidth = 1.5) +
  annotate("text", x=1990, y=6, label= "Federal Avg", color = "orange", size = 5) +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(effective_minimum_wage_data$year), max(effective_minimum_wage_data$year), by = 4)) + 
  labs(title = "State Effective Minimum Wage by Year (Adjusted for 2020 $)",
       subtitle = "For states with an adjusted effective minimum wage above the federal level",
       x = "Year",
       y = "Effective Minimum Wage (Adjusted to 2020 values)",
       color = "Selected States")

rm(effective_minimum_wage_data)
```

This graph removes all data points where the state minimum wage falls below the federal amount. From this we can see that more states are taking it into their own hands to protect workers rights. We can see a large jump in 2007 which may be related to the financial crisis. There is another spike around 2014.

### 2.3.3 House Elections

```{r}
map_data <- full_state_data |> 
  select(c("year", "state", "party_state_average")) |> 
  distinct(year, state, .keep_all = TRUE) |> 
  filter(year %% 4==0) |> 
  filter(!is.na(party_state_average))

plot_usmap(data = map_data, values = "party_state_average", color = "black") +
  facet_wrap(~year, nrow = 4, ncol= 3) +
  theme(legend.position = "bottom") +
  scale_fill_gradient(low = "red", high = "blue", name = "Proportion") +
  labs(
    title = "Proportion of House Delegation that is Democratic"
  )
rm(map_data)
```

We can see that, especially in the northern-midwest states, that the country has grown to be more republican in the last 40 years. However, in the last 10 years this has begun to shift again. During this whole time, it appears that New England has become more Democrat.

### 2.3.4 Collective Bargaining and Wages

```{r}
full_ntl_data |> 
  ggplot(aes(x = year)) +
  geom_line(aes(y = union_wage_2020_adj), color = "blue") +
  annotate("text", x=1993, y=28, label= "Union Wages", color = "blue", size = 5) +
  geom_line(aes(y = nonunion_wage_2020_adj), color = "red") +
  annotate("text", x=1993, y=22, label= "Non Union Wages", color = "red", size = 5) +
  scale_x_continuous(breaks = seq(min(full_ntl_data$year), max(full_ntl_data$year), by = 4)) + 
  theme_minimal() +
  labs(
    title = "Union vs. Non Union Wages Over Time",
    x = "Year",
    y = "Wages (Adjusted to 2020 values)"
  )
```

From our income graphs, this graph is rather unintuitive, as we would expect adjusted wages to be decreasing in this time. There are a number of potential causes for this. First, Americans work less hours today than they did in 1980. Second, and more likely, is that the income variables we used includes those who are not working. As the U.S. experiences a graying of society, this could be driving down mean incomes.

```{r}
full_ntl_data |> 
  ggplot(aes(x = percent_collective_bargain)) +
  geom_point(aes(y = nonunion_wage_2020_adj), color = "blue") +
  geom_jitter(aes(y = union_wage_2020_adj), color = "red") +
  theme_light() +
  facet_wrap(~decade) +
  labs(
    title = "Union vs. Non-Union Wages by Decade",
    subtitle = "Red represents union wages and blue represents non-union wages",
    x = "Percent of Workers Under Collective Bargaining Agreement",
    y = "Wages (Adjusted to 2020 values)"
    
  )
```

This graph is incredibly interesting. First, a quick view of this graph shows the exact opposite of our hypothesis. Looking at each decade we can see collective bargaining rates decreasing and wage increasing. Then, in each decade that relationship continues. Still, we can see that in every decade, a collective bargaining agreement will lead to an increase in wages for a worker over non-collective-bargaining-jobs.

### 2.3.5 Collective Bargaining and House Elections

This graph demonstrates how political collective bargaining has become over the last 40 years. In the 1980s, there was almost no relationship between collective bargaining agreements and party affiliation. However, by 2020, there is now a significant bias.


```{r}
#| message: FALSE
full_state_data |> 
  filter(year %% 4==0) |>
  ggplot(aes(x = percent_collective_bargain, y = party_state_average)) +
  geom_jitter(aes(color = regions), alpha = 0.5, width = 0.1, height = 0.1) +
  geom_smooth(method = "lm", color = "black") +
  facet_wrap(~decade) +
  theme_light() +
  labs(
    title = "Percent Collective Bargaining vs Proportion of House Delegation That is Democratic",
    x = "Percent of Workers Covered by Collective Bargaining",
    y = "Proportion of House Delegation that is Democratic",
    color = "Region"
  )
```


```{r}
#| message: FALSE
full_state_data |> 
  filter(year %% 4==0) |>
  ggplot(aes(x = percent_collective_bargain, y = party_state_average)) +
  geom_jitter(aes(color = regions), alpha = 0.15, width = 0.1, height = 0.1) +
  geom_smooth(method = "lm", aes(group = regions, color = regions), se = FALSE) +
  facet_wrap(~decade) +
  labs(
    title = "Percent Collective Bargaining vs Proportion of House Delegation That is Democratic",
    subtitle = "Regressed by Region",
    x = "Percent of Workers Covered by Collective Bargaining",
    y = "Proportion of House Delegation that is Democratic",
    color = "Region"
  )
```
These two graphs show very interesting results. First, we can see how unions have become politicized in the last 40 years. In the 1980s, there was almost no correlation between the amount of workers in a collective bargaining agreement and what the house delegation looked like in that state. By the 2010s, this had changed. From the second graph, we can see that the North Central and South regions are the main drivers behind this, seen in the steepening of the regression slope.


## Modeling

Regression between percent collective bargaining and party state average
```{r}
decade_region <- list(
  c("1980s", "Northeast"),
  c("1980s", "West"),
  c("1980s", "North Central"),
  c("1980s", "South"),
  c("2010s", "Northeast"),
  c("2010s", "West"),
  c("2010s", "North Central"),
  c("2010s", "South")
)
                  
regression_decade_region <- function(decade1, region1) {
  full_state_data_filtered <- subset(full_state_data, regions == region1 & decade == decade1)
  model <- lm(full_state_data_filtered$party_state_average~full_state_data_filtered$percent_collective_bargain) 
  summary(model)$coefficients |> 
  as_tibble() |> 
  mutate(Reggression_Run = c("Intercept", "percent_collective_bargain"),
         Decade = c(decade1, decade1),
         Region = c(region1, region1),
         .before = Estimate)
}  

full_state_data_temp <- full_state_data |>
  filter(year >= 1984 & year < 1990)
CB_party_regression <- summary(lm(full_state_data_temp$party_state_average~full_state_data_temp$percent_collective_bargain))$coefficients |> 
  as_tibble() |> 
  mutate(Reggression_Run = c("Intercept", "percent_collective_bargain"),
         Decade = c("1980s", "1980s"),
         Region = c("all", "all"),
         .before = Estimate)

for (x in decade_region) {
  CB_party_regression <- full_join(CB_party_regression, regression_decade_region(x[1], x[2]),
                                   by = join_by(Reggression_Run, Decade, Region, Estimate, `Std. Error`, `t value`, `Pr(>|t|)`))
}

full_state_data_temp <- full_state_data |>
  filter(year >= 2010 & year < 2020)
CB_party_temp <- summary(lm(full_state_data_temp$party_state_average~full_state_data_temp$percent_collective_bargain))$coefficients |> 
  as_tibble() |> 
  mutate(Reggression_Run = c("Intercept", "percent_collective_bargain"),
         Decade = c("2010s", "2010s"),
         Region = c("all", "all"),
         .before = Estimate)

CB_party_regression <- full_join(CB_party_regression, CB_party_temp,
                                   by = join_by(Reggression_Run, Decade, Region, Estimate, `Std. Error`, `t value`, `Pr(>|t|)`))

CB_party_regression |>
  filter(Reggression_Run == "percent_collective_bargain")
```



      


## Conclusion
